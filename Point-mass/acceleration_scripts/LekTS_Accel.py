# # ==============================================================================
# # ______  _____________________________________________________________________
# # ___   |/  /_  __ \__  __/_  __ \__  __ \_  ___/__  __ \_  __ \__  __ \__  __/
# # __  /|_/ /_  / / /_  /  _  / / /_  /_/ /____ \__  /_/ /  / / /_  /_/ /_  /
# # _  /  / / / /_/ /_  /   / /_/ /_  _, _/____/ /_  ____// /_/ /_  _, _/_  /
# # /_/  /_/  \____/ /_/    \____/ /_/ |_| /____/ /_/     \____/ /_/ |_| /_/
# # ______  ______________   _________________________________
# # ___   |/  /___  _/__  | / /__  __ \_  ___/__  ____/__  __/
# # __  /|_/ / __  / __   |/ /__  / / /____ \__  __/  __  /
# # _  /  / / __/ /  _  /|  / _  /_/ /____/ /_  /___  _  /
# # /_/  /_/  /___/  /_/ |_/  /_____/ /____/ /_____/  /_/
# # ==============================================================================
# # Classes and functions of a straight line simulation

# # Importing libraries
import numpy as np


class Acceleration(object):
    def __init__(self):
        self.track_length = 100    # Track length [m]
        # self.distance = 0:0.05:self.track_length    # Distance vector (still in doubt)
        self.curvature = 300 * np.ones(self.distance)   # Curvature?
        self.elevation = -15 * np.sin(self.distance * np.pi / (0.5 * self.track_length))

