# # ==============================================================================
# #
# #   _____ ____  ________________     __  ___________________  _____________
# #  / ___// __ \/ ____/ ____/ __ \   /  |/  / ____/_  __/ __ \/  _/ ____/   |
# #  \__ \/ /_/ / __/ / __/ / / / /  / /|_/ / __/   / / / /_/ // // /   / /| |
# # ___/ / ____/ /___/ /___/ /_/ /  / /  / / /___  / / / _, _// // /___/ ___ |
# #/____/_/   /_____/_____/_____/  /_/  /_/_____/ /_/ /_/ |_/___/\____/_/  |_|
# #
# #                           www.speedmetrica.com
# #
# # ==============================================================================
# # Comparing calculated signal from SM_curvature with data generated by motec i2

# # Importing libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# # Getting the data
data_from_i2 = 'interlagos_corner_data.csv'    # Data from motec i2, for validation
data_from_lts = '../track_coordinates/turn_radius.csv'    # Data from the lap time simulator (LTS)

df_lts = pd.read_csv(data_from_lts, sep=',')    # LTS data transformed to dataframe
df_i2 = pd.read_csv(data_from_i2, sep=',', low_memory=False, skiprows=13)    # motec data transformed to dataframe
df_i2 = df_i2.drop([0], axis=0)
# df_i2['Corner Radius Norm'].fillna(value='None', inplace=True)    # Cleaning motec data from NaN values to 'None'
df_i2['Corner Radius Norm'].fillna(method='ffill', inplace=True)
pd.to_numeric(df_i2['Corner Radius Norm'])

# print(df_i2.loc[[117]])
# print(df_lts.head())
# print(df_i2.head())
# print(df_i2['Corner Radius Norm'])
# print(df_i2['Corner Radius'])
# print(df_i2.loc[df_i2['Corner Radius Norm'] == 'None'])
# print(df_i2.isnull().values.any())
# print(df_i2.isna().sum())
# print(df_i2[df_i2['Corner Radius Norm'].isnull()])


fig, ax = plt.subplots(figsize=(10, 5))
# lts_plot = ax.plot(df_lts['Turn Radius'])
i2_plot = ax.plot(df_i2['Corner Radius Norm'])
# i2_plot = ax.plot(df_i2['Corner Radius'])
plt.ylim(0, 500)
plt.show()
